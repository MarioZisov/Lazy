<Window x:Class="Lazy.UI.MainWindow"
        x:Name="AppWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lazy.UI"
        xmlns:controls="clr-namespace:Lazy.UI.UserControls"
        xmlns:converters="clr-namespace:Lazy.UI.ValueConveters"
        xmlns:dm="clr-namespace:Lazy.Core.ViewModels.DesignModels;assembly=Lazy.Core"
        xmlns:vmBase="clr-namespace:Lazy.Core.ViewModels.Base;assembly=Lazy.Core"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        MinHeight="{Binding WindowMinimumHeight}"
        MinWidth="{Binding WindowMinimumWidth}"
        Title="Lazy" Height="700" Width="1200">

    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">

                        <!--Outer border of the dropshadow effect-->
                        <Border Padding="{Binding OutherMarginSizeThickness, FallbackValue=10}">

                            <Grid>

                                <!--Background of the whole window and corner radius-->
                                <Border x:Name="Container" 
                                        Background="{StaticResource DarkBrush}"
                                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=6}"/>

                                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=6}"
                                        Background="{StaticResource DarkBrush}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" Opacity="0.3"/>
                                    </Border.Effect>
                                </Border>

                                <Grid>

                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Container}"/>
                                    </Grid.OpacityMask>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding TitleRowLenght, FallbackValue=30}"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0" Panel.ZIndex="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Button Command="{Binding MinimizeCommand}" 
                                                    Content="{StaticResource WindowMinimizeIcon}"
                                                    Style="{StaticResource ControlIconButton}"
                                                    Grid.Column="0">
                                            </Button>

                                            <Button Command="{Binding MaximizeCommand}" 
                                                    Content="{TemplateBinding WindowState, Converter={converters:WindowStateToIconConverter}}"
                                                    Style="{StaticResource ControlIconButton}" 
                                                    Grid.Column="1">
                                            </Button>

                                            <Button Content="{StaticResource WindowCloseIcon}" 
                                                    Command="{Binding CloseCommand}"
                                                    Style="{StaticResource CloseIconButton}"
                                                    Grid.Column="2"/>

                                        </Grid>
                                    </Grid>

                                    <!--Binding of the content of the window-->
                                    <Border Grid.Row="1" Padding="0" BorderThickness="0 1 0 0" BorderBrush="{StaticResource MediumLightBrush}">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </Border>
                                </Grid>

                            </Grid>

                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome  
            ResizeBorderThickness="{Binding ResizeBorderThickness}"
            CaptionHeight="{Binding CaptionHeight}"
            GlassFrameThickness="0" 
            CornerRadius="0"/>
    </WindowChrome.WindowChrome>

    <!--Window content-->
    <Grid x:Name="grd" Background="{StaticResource MediumDarkBrush}">
        <!--<Border Grid.Column="0" Background="{StaticResource DarkBrush}">
            <Frame x:Name="SideFrame" Content="{Binding MainPage, Converter={converters:ApplicationPageValueConverter}}" Background="Transparent"/>
        </Border>-->

        <Grid.ColumnDefinitions>
            
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto" x:Name="elementContainerColumn"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>

        <!--<controls:ControlPanel Grid.Column="0"/>-->
        <controls:ControlBar Grid.Column="0" Panel.ZIndex="1"/>
        <controls:ElementsContainer Grid.Column="1" 
                                    x:Name="elementContainer"
                                    DataContext="{
                                        Binding ApplicationViewModel.ContainerContent, 
                                        Source={x:Static vmBase:ViewModelLocator.Instance}, 
                                        Converter={converters:ElementContainerContentToDataContextConverter}}" 
                                    d:DataContext="{x:Static dm:ElementContainerDesignModel.Instance}"
                                    Visibility="{Binding ApplicationViewModel.IsContainerVisible, Source={x:Static vmBase:ViewModelLocator.Instance}, Converter={converters:BooleanToVisibilityValueConverter}}" 
                                    DataContextChanged="ElementsContainer_DataContextChanged"/>
        <GridSplitter x:Name="theSplitter" Grid.Column="2" Width="3" HorizontalAlignment="Stretch"
                      Visibility="{Binding ApplicationViewModel.IsContainerVisible, Source={x:Static vmBase:ViewModelLocator.Instance}, Converter={converters:BooleanToVisibilityValueConverter}}" 
                      Background="{StaticResource MediumLightBrush}"/>
        <controls:ElementDetails Grid.Column="3"
                                 DataContext="{Binding ApplicationViewModel.ElementDetails, 
                                               Source={x:Static vmBase:ViewModelLocator.Instance}}"
                                 Visibility="{Binding ApplicationViewModel.AreDetailsVisible,
                                              Source={x:Static vmBase:ViewModelLocator.Instance}, 
                                              Converter={converters:BooleanToVisibilityValueConverter}}"
                                 d:DataContext="{x:Static dm:ElementDetailsDesignModel.Instance}"/>
    </Grid>
 
</Window> 
